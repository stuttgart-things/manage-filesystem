---
- name: Get OS
  ansible.builtin.debug:
    msg: "Detected OS: {{ ansible_distribution }}-{{ ansible_distribution_major_version }} on hypervisor: {{ ansible_virtualization_type }}"

- name: Filesystem detection for VMWARE
  block:
    - name: Debug
      ansible.builtin.debug:
        msg: "Using filesystem detection for VMWARE ..."

    - name: Search lvm disk
      ansible.builtin.set_fact:
        lvm_disk: "{{ ansible_facts.devices.keys() | map('regex_search', 'sd.*') | select('string') | list }}"
  when: ansible_virtualization_type == 'VMware'

- name: Filesystem detection for KVM
  block:

    - name: Debug
      ansible.builtin.debug:
        msg: "Using filesystem detection for KVM ..."

    - name: Set lvm disk vars
      ansible.builtin.set_fact:
        lvm_disk: "{{ ansible_facts.devices.keys() | map('regex_search', 'vd.*') | select('string') | list }}"
  when: ansible_virtualization_type == 'kvm'

- name: Locate lvm disk
  ansible.builtin.set_fact:
    lvm_device_auto: "/dev/{{ lvm_disk[0] }}"

- name: Show detected lvm disk
  ansible.builtin.debug:
    msg: "Disk detected: {{ lvm_device_auto }}"

- name: Search LVM volume group name
  ansible.builtin.shell: "pvdisplay | grep 'VG Name' | awk '{print $3}'"
  become: true
  register: lvm_vol_group
  changed_when: true

- name: Search LVM device path
  ansible.builtin.shell: "pvdisplay | grep 'PV Name' | awk '{print $3}'"
  become: true
  register: lvm_device
  changed_when: true

- name: Output facts
  ansible.builtin.debug:
    var: ansible_facts
  when: debug | bool

- name: "Read partition information from {{ lvm_device_auto }}"
  ansible.builtin.shell: "parted {{ lvm_device_auto }} -s unit GB print free | grep 'Free Space' | tail -n1 | awk '{print $3}'"
  become: true
  register: part_free_space_unfiltered
  changed_when: true

- name: Set lvm vars
  ansible.builtin.set_fact:
    part_free_space: "{{ part_free_space_unfiltered.stdout | replace('GB', '') | int }}"
    lvm_vg: "{{ lvm_vol_group.stdout }}"
    lvm_device_part_number: "{{ lvm_device.stdout[-1] }}"

- name: Output found PV
  ansible.builtin.debug:
    msg: "LVM found: PV: {{ lvm_vol_group.stdout }} on device {{ lvm_device_auto }} with part id: {{ lvm_device_part_number }}"

- name: Show unused space for enlargement
  ansible.builtin.debug:
    msg: "{{ lvm_device_auto }} has: {{ part_free_space }} GB unused, start lvm enlargement process ..."
  when: part_free_space | int >= 1

- name: Show if enlargement is not necessary
  ansible.builtin.debug:
    msg: "{{ lvm_device_auto }} has: {{ part_free_space }} GB unused, no enlargement needed ..."
  when: part_free_space | int < 1
